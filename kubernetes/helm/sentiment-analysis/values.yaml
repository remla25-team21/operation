# model-service
modelService:
  name: model-service
  replicaCount: 1
  image:
    repository: ghcr.io/remla25-team21/model-service
    tag: latest
    pullPolicy: Always
  service:
    type: ClusterIP
    port: 8080

# app-service
appService:
  name: app-service
  replicaCount: 1
  image:
    repository: ghcr.io/remla25-team21/app-backend
    tag: "5.0.latest"       # used for v1
    tagV2: "5.1.latest"     # used for v2
    pullPolicy: Always
  service:
    type: ClusterIP
    port: 5000

# app-frontend
appFrontend:
  name: app-frontend
  replicaCount: 1
  replicaCountV2: 1
  image:
    repository: ghcr.io/remla25-team21/app-frontend
    tag: "5.0.latest"       # used for v1
    tagV2: "5.1.latest"     # used for v2
    pullPolicy: Always
  service:
    type: ClusterIP
    port: 3000

# Istio Gateway configuration
istio:
  ingressGateway:
    # Override this value during installation with --set istio.ingressGateway.host=<IP address>
      host: ""  # Default is empty, will be handled by template logic
      scheme: "http"
      apiPath: "/api/app-service"

# Ingress configuration
ingress:
  enabled: true
  className: "nginx"
  annotations: {}
  hosts:
  - host: sentiment-analysis.local
    paths:
    - path: /
      pathType: Prefix

# ConfigMap configuration (to store environment variables)
configMap:
  create: true

# Prometheus monitoring configuration
monitoring:
  enabled: true
  serviceMonitor:
    enabled: true
    additionalLabels:
      prometheus: kube-prometheus

# PrometheusRules configuration
prometheusRules:
  enabled: true
  additionalLabels:
    release: prometheus

# Grafana dashboard configuration
grafana:
  dashboardsConfigMaps:
    sentiment-dashboard: "sentiment-dashboard"
  additionalDataSources: []

# Secret configuration (just to show that I know how to)
secret:
  create: true
  data:
    SECRET_KEY: verysecretkey
    smtpPassword: ""

# AlertManager configuration for email alerts
alertmanager:
  enabled: true
  config:
    global:
      smtp_smarthost: 'smtp.example.com:587'
      smtp_from: 'alertmanager@example.com'
      smtp_auth_username: 'alertmanager'
      smtp_auth_password: '{{ .Values.secret.data.smtpPassword }}'
      smtp_require_tls: true
    route:
      group_by: [ 'alertname', 'severity' ]
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 4h
      receiver: 'email-notifications'
      routes:
      - match:
          severity: warning
        receiver: 'email-notifications'
    receivers:
    - name: 'email-notifications'
      email_configs:
      - to: 'remla25-team21@example.com'
        send_resolved: true
